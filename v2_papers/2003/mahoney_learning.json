{
  "version": "v2.1",
  "reference": {
    "title": "Learning rules for anomaly detection of hostile network traffic",
    "authors": [
      "Mahoney, M. V.",
      "Chan, P. K."
    ],
    "publication_name": "Third IEEE International Conference on Data Mining",
    "publication_type": "peer_reviewed_conference",
    "year": 2003,
    "organization_publishers": [
      "ieee"
    ],
    "pages_number_of": 4,
    "bibtex": {
      "type": "INPROCEEDINGS",
      "pages": "601--604",
      "doi": "10.1109/ICDM.2003.1250987"
    },
    "access_open": false,
    "curated_by": "vormayr, g.",
    "curated_last_revision": "24-04-2018",
    "curated_revision_number": 1
  },
  "data": {
    "datasets": [
      {
        "name": "darpa-ideval-1999",
        "availability": "public",
        "format": "packet",
        "types": [
          "ip"
        ],
        "generation": "synthetic",
        "generation_year": 1999,
        "covered_period": "weeks",
        "details": [
          "raw"
        ],
        "subsets": [],
        "anonymized": false
      },
      {
        "name": "_private_packets",
        "availability": "private",
        "format": "packet",
        "types": [
          "ip"
        ],
        "generation": "captured",
        "generation_year": "missing",
        "covered_period": "weeks",
        "details": [
          "raw",
          "_truncated",
          "_rate_limited"
        ],
        "subsets": [
          "inbound",
          "rate limited"
        ],
        "anonymized": false
      }
    ]
  },
  "preprocessing": {
    "performed_feature_selection": false,
    "packet_analysis_oriented": true,
    "flow_analysis_oriented": true,
    "flow_aggregation_analysis_oriented": false,
    "tools": [],
    "normalization_type": "no",
    "transformations": [
      "sampling"
    ],
    "final_data_format": "nominal_vectors",
    "packets": [
      {
        "selection": "expert_knowledge",
        "role": "main",
        "main_goal": "anomaly_detection",
        "features": [
          {
            "slice_bits": [
              0,
              16,
              "__rawPacket"
            ]
          },
          {
            "slice_bits": [
              16,
              32,
              "__rawPacket"
            ]
          },
          {
            "slice_bits": [
              32,
              48,
              "__rawPacket"
            ]
          },
          {
            "slice_bits": [
              48,
              64,
              "__rawPacket"
            ]
          },
          {
            "slice_bits": [
              64,
              80,
              "__rawPacket"
            ]
          },
          {
            "slice_bits": [
              80,
              96,
              "__rawPacket"
            ]
          },
          {
            "slice_bits": [
              96,
              112,
              "__rawPacket"
            ]
          },
          {
            "slice_bits": [
              112,
              128,
              "__rawPacket"
            ]
          },
          {
            "slice_bits": [
              128,
              144,
              "__rawPacket"
            ]
          },
          {
            "slice_bits": [
              144,
              160,
              "__rawPacket"
            ]
          },
          {
            "slice_bits": [
              160,
              176,
              "__rawPacket"
            ]
          },
          {
            "slice_bits": [
              176,
              192,
              "__rawPacket"
            ]
          },
          {
            "slice_bits": [
              192,
              208,
              "__rawPacket"
            ]
          },
          {
            "slice_bits": [
              208,
              224,
              "__rawPacket"
            ]
          },
          {
            "slice_bits": [
              224,
              240,
              "__rawPacket"
            ]
          },
          {
            "slice_bits": [
              240,
              256,
              "__rawPacket"
            ]
          },
          {
            "slice_bits": [
              256,
              272,
              "__rawPacket"
            ]
          },
          {
            "slice_bits": [
              272,
              288,
              "__rawPacket"
            ]
          },
          {
            "slice_bits": [
              288,
              304,
              "__rawPacket"
            ]
          },
          {
            "slice_bits": [
              304,
              320,
              "__rawPacket"
            ]
          },
          {
            "slice_bits": [
              320,
              336,
              "__rawPacket"
            ]
          },
          {
            "slice_bits": [
              336,
              352,
              "__rawPacket"
            ]
          },
          {
            "slice_bits": [
              352,
              386,
              "__rawPacket"
            ]
          },
          {
            "slice_bits": [
              368,
              384,
              "__rawPacket"
            ]
          }
        ]
      }
    ],
    "flows": [
      {
        "selection": "expert_knowledge",
        "role": "main",
        "main_goal": "anomaly_detection",
        "bidirectional": true,
        "features": [
          "tcpSourcePort",
          "tcpDestinationPort",
          {
            "slice_bits": [
              0,
              8,
              "sourceIPv4Address"
            ]
          },
          {
            "slice_bits": [
              8,
              16,
              "sourceIPv4Address"
            ]
          },
          {
            "slice_bits": [
              16,
              24,
              "sourceIPv4Address"
            ]
          },
          {
            "slice_bits": [
              24,
              32,
              "sourceIPv4Address"
            ]
          },
          {
            "slice_bits": [
              0,
              8,
              "destinationIPv4Address"
            ]
          },
          {
            "slice_bits": [
              8,
              16,
              "destinationIPv4Address"
            ]
          },
          {
            "slice_bits": [
              16,
              24,
              "destinationIPv4Address"
            ]
          },
          {
            "slice_bits": [
              24,
              32,
              "destinationIPv4Address"
            ]
          },
          "octetTotalCount",
          {
            "divide": [
              "flowDurationMilliseconds",
              1000
            ]
          },
          {
            "apply": [
              "tcpControlBits",
              {
                "select_slice": [
                  0,
                  1
                ]
              }
            ]
          },
          {
            "apply": [
              "tcpControlBits",
              {
                "select_slice": [
                  -2,
                  -1
                ]
              }
            ]
          },
          "__first8Words"
        ]
      }
    ]
  },
  "analysis_method": {
    "supervised_learning": false,
    "unsupervised_learning": true,
    "semisupervised_learning": false,
    "anomaly_detection": false,
    "tools": [],
    "algorithms": [
      {
        "name": "LERAD",
        "subname": "Learning Rules for Anomaly Detection",
        "learning": "unsupervised",
        "role": "main",
        "type": "heuristics",
        "metric/decision_criteria": "probabilistic",
        "source": "own_proposed",
        "parameters_provided": false
      }
    ]
  },
  "evaluation": {
    "algorithm_comparison": false,
    "internal_validation": false,
    "external_validation": true,
    "dpi-based_validation": true,
    "port-based_validation": false,
    "pre-knowledge-based_validation": true,
    "manual_verification": false,
    "implementation_in_real_scenario": false,
    "train_test_separation": false,
    "methods": [
      {
        "name": "true positives",
        "type": "external",
        "metrics": [
          "incomplete_confusion_matrix"
        ],
        "source": "popular"
      }
    ]
  },
  "result": {
    "main_goal": "anomaly_detection",
    "subgoals": [
      "anomaly_detection"
    ],
    "focus_main": "algorithm",
    "claimed_improvements": [
      "improved_detection_rates"
    ],
    "reproducibility": "reproducible"
  }
}