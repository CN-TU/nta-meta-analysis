{
  "version": "v2.2.0",
  "reference": {
    "title": "NvCloudIDS: A security architecture to detect intrusions at network and virtualization layer in cloud environment",
    "authors": [
      "Mishra, Preeti",
      "Pilli, Emmanuel S",
      "Varadharajant, Vijay",
      "Tupakula, Udaya"
    ],
    "publication_name": "Advances in Computing, Communications and Informatics (ICACCI), 2016 International Conference on",
    "publication_type": "peer_reviewed_conference",
    "year": 2016,
    "organization_publishers": [
      "ieee"
    ],
    "pages_number_of": 7,
    "bibtex": {
      "type": "inproceedings",
      "pages": "56--62",
      "organization": "IEEE"
    },
    "access_open": false,
    "curated_by": "ferreira, d.",
    "curated_last_revision": "29-05-2018",
    "curated_revision_number": 2
  },
  "data": {
    "datasets": [
      {
        "name": "UNSW-NB15",
        "availability": "public",
        "format": "flow",
        "types": [
          "ip"
        ],
        "generation": "mixed",
        "generation_year": 2015,
        "covered_period": "hours",
        "details": [
          "preprocessed"
        ],
        "subsets": "none",
        "anonymized": false
      },
      {
        "name": "Dnew",
        "availability": "private",
        "format": "packet",
        "types": [
          "ip"
        ],
        "generation": "mixed",
        "generation_year": "missing",
        "covered_period": "missing",
        "subsets": "none"
      }
    ]
  },
  "preprocessing": {
    "performed_feature_selection": true,
    "packet_analysis_oriented": false,
    "flow_analysis_oriented": true,
    "flow_aggregation_analysis_oriented": false,
    "tools": "missing",
    "normalization_type": "no",
    "transformations": "none",
    "final_data_format": "mixed_vectors",
    "feature_selections": [
      {
        "name": "recursive feature elimination using Random Forest",
        "type": "wrapper",
        "classifier": "Random Forest",
        "role": "main"
      }
    ],
    "flows": [
      {
        "selection": "feature_selection",
        "role": "main",
        "main_goal": "anomaly_detection",
        "bidirectional": true,
        "features": [
          "sourceIPv4Address",
          "destinationIPv4Address",
          "destinationTransportPort",
          {
            "apply": [
              "octetTotalCount",
              "forward"
            ]
          },
          {
            "apply": [
              "ipTTL",
              "forward"
            ]
          },
          {
            "apply": [
              {
                "divide": [
                  {
                    "multiply": [
                      "octetTotalCount",
                      8
                    ]
                  },
                  "_flowDurationSeconds"
                ]
              },
              "forward"
            ]
          },
          {
            "apply": [
              {
                "divide": [
                  {
                    "multiply": [
                      "octetTotalCount",
                      8
                    ]
                  },
                  "_flowDurationSeconds"
                ]
              },
              "backward"
            ]
          },
          {
            "apply": [
              {
                "mean": [
                  "octetTotalCount"
                ]
              },
              "forward"
            ]
          },
          {
            "apply": [
              {
                "mean": [
                  "octetTotalCount"
                ]
              },
              "backward"
            ]
          },
          "flowStartSeconds",
          "flowEndSeconds",
          {
            "add": [
              "__timeBetweenSynAndAck",
              "__timeBetweenSynAckAndAck"
            ]
          },
          "__ctStateTTL",
          "__flowWithGetOrPostInHttpTotalCount",
          "__ctSrvSrc",
          "__ctSrvDst"
        ],
        "key_features": [
          "protocolIdentifier",
          "sourceIPv4Address",
          "sourceTransportPort",
          "destinationIPv4Address",
          "destinationTransportPort"
        ]
      }
    ]
  },
  "analysis_method": {
    "supervised_learning": true,
    "unsupervised_learning": false,
    "semisupervised_learning": false,
    "anomaly_detection": false,
    "tools": "missing",
    "algorithms": [
      {
        "name": "Random Forest",
        "learning": "supervised",
        "role": "competitor",
        "type": "classification",
        "metric/decision_criteria": "mutual_information",
        "source": "referenced",
        "parameters_provided": false
      },
      {
        "name": "Logistic Regression",
        "learning": "supervised",
        "role": "competitor",
        "type": "classification",
        "metric/decision_criteria": "probabilistic",
        "source": "referenced",
        "parameters_provided": false
      },
      {
        "name": "Ensemble",
        "subname": "Ensemble of Random Forests weighed according to a Logistic Regression",
        "learning": "supervised",
        "role": "main",
        "type": "classification",
        "source": "own_proposed",
        "parameters_provided": false
      }
    ]
  },
  "evaluation": {
    "algorithm_comparison": true,
    "internal_validation": false,
    "external_validation": true,
    "dpi-based_validation": false,
    "port-based_validation": false,
    "pre-knowledge-based_validation": true,
    "manual_verification": false,
    "implementation_in_real_scenario": false,
    "train_test_separation": true,
    "methods": [
      {
        "name": "Accuracy",
        "type": "external",
        "metrics": [
          "accuracy"
        ],
        "source": "popular"
      },
      {
        "name": "False Positive Rate",
        "type": "external",
        "metrics": [
          "false_positive_rate"
        ],
        "source": "popular"
      },
      {
        "name": "Area Under Curve/Receiver Operating Characteristics",
        "type": "external",
        "metrics": [
          "roc/auc"
        ],
        "source": "popular"
      }
    ]
  },
  "result": {
    "main_goal": "anomaly_detection",
    "subgoals": [
      "anomaly_detection"
    ],
    "focus_main": "methodology/framework",
    "claimed_improvements": [
      "enhanced_functionality"
    ],
    "reproducibility": "no"
  }
}