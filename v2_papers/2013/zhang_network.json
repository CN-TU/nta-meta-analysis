{
  "version": "v2.1",
  "reference": {
    "title": "Network Traffic Classification Using Correlation Information",
    "authors": [
      "Zhang, Jun",
      "Xiang, Yang",
      "Wang, Yu",
      "Zhou, Wanlei",
      "Xiang, Yong",
      "Guan, Yong"
    ],
    "publication_name": "IEEE Transactions on Parallel and Distributed Systems",
    "publication_type": "peer_reviewed_journal",
    "year": 2013,
    "organization_publishers": [
      "ieee"
    ],
    "pages_number_of": 14,
    "bibtex": {
      "type": "article",
      "volume": "24",
      "pages": "104--117",
      "number": "1"
    },
    "access_open": false,
    "curated_by": "ferreira, d.",
    "curated_last_revision": "17-01-2018",
    "curated_revision_number": 1
  },
  "data": {
    "datasets": [
      {
        "name": "isp",
        "availability": "lost_source",
        "format": "packet",
        "types": [
          "tcp"
        ],
        "generation": "captured",
        "generation_year": 2010,
        "covered_period": "hours",
        "details": [
          "raw"
        ],
        "subsets": []
      },
      {
        "name": "wide",
        "availability": "public",
        "format": "packet",
        "types": [
          "tcp"
        ],
        "generation": "captured",
        "generation_year": "missing",
        "covered_period": "missing",
        "details": [
          "no_payload"
        ],
        "subsets": [],
        "anonymized": true
      }
    ]
  },
  "preprocessing": {
    "performed_feature_selection": true,
    "packet_analysis_oriented": false,
    "flow_analysis_oriented": true,
    "flow_aggregation_analysis_oriented": false,
    "tools": [],
    "normalization_type": "missing",
    "transformations": [],
    "final_data_format": "numerical_vectors",
    "feature_selections": [
      {
        "name": "Correlation-based Filter",
        "type": "filter",
        "classifier": "none",
        "role": "main"
      }
    ],
    "packets": [],
    "flows": [
      {
        "selection": "expert_knowledge",
        "role": "competitor",
        "main_goal": "application_classification",
        "bidirectional": false,
        "features": [
          {
            "apply": [
              "packetTotalCount",
              "forward"
            ]
          },
          {
            "apply": [
              "packetTotalCount",
              "backward"
            ]
          },
          {
            "apply": [
              "octetTotalCount",
              "forward"
            ]
          },
          {
            "apply": [
              "octetTotalCount",
              "backward"
            ]
          },
          {
            "apply": [
              {
                "minimum": [
                  "octetTotalCount"
                ]
              },
              "forward"
            ]
          },
          {
            "apply": [
              {
                "minimum": [
                  "octetTotalCount"
                ]
              },
              "backward"
            ]
          },
          {
            "apply": [
              {
                "maximum": [
                  "octetTotalCount"
                ]
              },
              "forward"
            ]
          },
          {
            "apply": [
              {
                "maximum": [
                  "octetTotalCount"
                ]
              },
              "backward"
            ]
          },
          {
            "apply": [
              {
                "mean": [
                  "octetTotalCount"
                ]
              },
              "forward"
            ]
          },
          {
            "apply": [
              {
                "mean": [
                  "octetTotalCount"
                ]
              },
              "backward"
            ]
          },
          {
            "apply": [
              {
                "stdev": [
                  "octetTotalCount"
                ]
              },
              "forward"
            ]
          },
          {
            "apply": [
              {
                "stdev": [
                  "octetTotalCount"
                ]
              },
              "backward"
            ]
          },
          {
            "apply": [
              {
                "minimum": [
                  "_interPacketTimeMicroseconds"
                ]
              },
              "forward"
            ]
          },
          {
            "apply": [
              {
                "minimum": [
                  "_interPacketTimeMicroseconds"
                ]
              },
              "backward"
            ]
          },
          {
            "apply": [
              {
                "maximum": [
                  "_interPacketTimeMicroseconds"
                ]
              },
              "forward"
            ]
          },
          {
            "apply": [
              {
                "maximum": [
                  "_interPacketTimeMicroseconds"
                ]
              },
              "backward"
            ]
          },
          {
            "apply": [
              {
                "mean": [
                  "_interPacketTimeMicroseconds"
                ]
              },
              "forward"
            ]
          },
          {
            "apply": [
              {
                "mean": [
                  "_interPacketTimeMicroseconds"
                ]
              },
              "backward"
            ]
          },
          {
            "apply": [
              {
                "stdev": [
                  "_interPacketTimeMicroseconds"
                ]
              },
              "forward"
            ]
          },
          {
            "apply": [
              {
                "stdev": [
                  "_interPacketTimeMicroseconds"
                ]
              },
              "backward"
            ]
          }
        ],
        "key_features": [
          "sourceIPv4Address",
          "sourceTransportPort",
          "destinationIPv4Address",
          "destinationTransportPort",
          "protocolIdentifier"
        ]
      }
    ],
    "flow_aggregations": []
  },
  "analysis_method": {
    "supervised_learning": true,
    "unsupervised_learning": false,
    "semisupervised_learning": false,
    "anomaly_detection": false,
    "tools": [
      {
        "name": "own_java_scripts",
        "availability": "private"
      }
    ],
    "algorithms": [
      {
        "name": "Nearest Neighbor",
        "learning": "supervised",
        "role": "validation",
        "type": "classification",
        "metric/decision_criteria": "euclidean",
        "tools": [
          {
            "name": "own_java_scripts",
            "availability": "private"
          }
        ],
        "source": "referenced",
        "parameters_provided": true
      },
      {
        "name": "Nearest Neighbor",
        "subname": "Average Nearest Neighbor (AVG-NN)",
        "learning": "supervised",
        "role": "main",
        "type": "classification",
        "metric/decision_criteria": "euclidean",
        "tools": [
          {
            "name": "own_java_scripts",
            "availability": "private"
          }
        ],
        "source": "own_proposed",
        "parameters_provided": true
      },
      {
        "name": "Nearest Neighbor",
        "subname": "Minimum Nearest Neighbor (MIN-NN)",
        "learning": "supervised",
        "role": "competitor",
        "type": "classification",
        "metric/decision_criteria": "euclidean",
        "tools": [
          {
            "name": "own_java_scripts",
            "availability": "private"
          }
        ],
        "source": "own_proposed",
        "parameters_provided": true
      },
      {
        "name": "Nearest Neighbor",
        "subname": "Majority Vote Nearest Neighbor (MVT-NN)",
        "learning": "supervised",
        "role": "competitor",
        "type": "classification",
        "metric/decision_criteria": "euclidean",
        "tools": [
          {
            "name": "own_java_scripts",
            "availability": "private"
          }
        ],
        "source": "own_proposed",
        "parameters_provided": true
      }
    ]
  },
  "evaluation": {
    "algorithm_comparison": true,
    "internal_validation": false,
    "external_validation": true,
    "dpi-based_validation": true,
    "port-based_validation": false,
    "pre-knowledge-based_validation": false,
    "manual_verification": false,
    "implementation_in_real_scenario": false,
    "train_test_separation": true,
    "methods": [
      {
        "name": "accuracy",
        "type": "external",
        "metrics": [
          "accuracy"
        ],
        "source": "popular"
      },
      {
        "name": "F-measure",
        "type": "external",
        "metrics": [
          "f-1"
        ],
        "source": "popular"
      }
    ]
  },
  "result": {
    "main_goal": "traffic_classification",
    "subgoals": [
      "traffic_classification",
      "application_classification"
    ],
    "focus_main": "algorithm",
    "claimed_improvements": [
      "improved_traffic_classification"
    ],
    "reproducibility": "repeatable"
  }
}
